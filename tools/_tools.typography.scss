$sf-font-type: 'google-fonts' !default; // or 'webfonts'

@mixin sf-typography($tag, $important: false) {
  $impt: false;
  
  // Thanks inuitcss!
  @if ($important == true) {
    $important: !important;
    $impt: true;
  } @elseif ($important == false) {
    $important: null;
    $impt: false;
  } @else {
    @error "$important needs to be `true` or `false`."
  }

  @if map-has-key($typographies, $tag) {
    $typography: map-get($typographies, $tag);
    $breakpoints: map-get($typography, 'breakpoints');

    @if map-has-key($typography, 'font')  {
      $font: map-get($typography, 'font');

      @if $sf-font-type == 'google-fonts' or $sf-font-type == 'typekit' {
        $weight: if(map-has-key($typography, 'weight'), map-get($typography, 'weight'), 'regular');

        @if $sf-font-type == 'google-fonts' {
          @include sf-google-fonts($font, $weight, $impt);
        } @else if $sf-font-type == 'typekit' {
          @include sf-typekit($font, $weight, $impt);
        }
      } @else if $sf-font-type == 'webfonts' {
        @include sf-webfonts($font, $impt);
      }
    }

    @each $bp-namespace, $bp in $breakpoints {
      @if ($bp-namespace == 'mobile') {
        @include inuit-font-size(nth($bp, 1), nth($bp, 2), 0, $impt);
        letter-spacing: nth($bp, 3) $important;

        @if length($bp) == 4 {
          text-transform: nth($bp, 4) $important;
        }
      }
      @else {
        @include mq($from: #{$bp-namespace}) {
          @include inuit-font-size(nth($bp, 1), nth($bp, 2), 0, $impt);
          letter-spacing: nth($bp, 3) $important;

          @if length($bp) == 4 {
            text-transform: nth($bp, 4) $important;
          }
        }
      }
    }
  }
  @else {
    @error '[#{$tag}] is not defined in $typographies';
  }
}
